/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package clientmain;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.*;
import java.net.Socket;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
/**
 *
 * @author user
 */
public class clientchat extends javax.swing.JFrame{

    /**
     * Creates new form clientchat
     */
    
    String serverMess=null;
    String cmdStr=null;
    String logMesg=null;
    BufferedReader in;
    PrintStream out;
    Socket servSocket;
    StringTokenizer readTokenizer;
    Thread listUpdateThread;
    ListMesgUpdate listMesgObj ;
   //SendMessage sendMessageObj;
   //SendAllMessage sendAllMessageObj;
    public String currLogin = "";
    public String currPassword= "";
    private ObjectOutputStream output;
    public clientchat(String currLogin1,String currPassword1) {
        initComponents();
                    	try
		{
                        servSocket = new Socket("127.0.0.1",12345);
			in = new BufferedReader(new InputStreamReader(servSocket.getInputStream()));
			out = new PrintStream (servSocket.getOutputStream());

		}
		catch (Exception Excep)
		{
			System.out.println("Socket error on client " + Excep);
		}
                        currLogin=currLogin1;
                        currPassword=currPassword1;
                addWindowListener(new WindowAdapter()
		{
                        @Override
				public void windowClosing(WindowEvent we)
				{
					String logMesg = "Logout:" + currLogin;
                			try
		            		{
					 		out.println(logMesg);
		                		        out.flush();
							out.close();
           				}
					catch(Exception eee)
					{
						System.out.println(eee);
					}
					System.exit(0);
				}
			}
		);
        
        
        try
		   {
        		 output=new ObjectOutputStream(servSocket.getOutputStream());
           		 output.writeObject(currLogin+" "+currPassword);
                         output.flush();
           	   }
		   catch(IOException ioe)
           	   {
            		System.out.println(ioe);
                   }
				jLabel1.setText(currLogin);
			    logMesg= "Login:" + currLogin;
	           try
		{
             		  out.println(logMesg);
		          out.flush();
		    }
			catch(Exception eee){System.out.println(eee);}
			    System.out.println(logMesg);
		 		System.out.println("logMesg is:" + logMesg);
				loginlist.add(currLogin,0);
				listMesgObj = new ListMesgUpdate();
				listMesgObj.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        loginlist = new java.awt.List();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton1.setText("send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sendall");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        loginlist.setMultipleMode(true);

        jButton4.setText("attach");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("sendFile");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField2.setText("jTextField2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginlist, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                            .addComponent(jTextField2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .addComponent(loginlist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String[] selectList = new String[10];
           	selectList = loginlist.getSelectedItems();
           	if (selectList.length == 0)
           	{
           	  JOptionPane.showMessageDialog(null,"Please select any user from the List","Select User From List",0);

           	}
           	else
           	{
	        System.out.println(selectList);
			}
            //chatTextArea.append(currLogin+" : "+chatMessage.getText()+"\n");
			if (selectList.length > 0)
			{
				String createMess = "SendMessage:" + jTextField1.getText() +":"+currLogin;
				for (int i=0 ; i<selectList.length;i++)
				{
                	createMess += ":" ;
					createMess += selectList[i];
				}
				try
                {
                    out.println(createMess);
                    out.flush();
                }catch(Exception eee){System.out.println(eee);}
                System.out.println(createMess);
                jTextField1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed
    }
        private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
            System.out.println("send all pressed");

                     int s = loginlist.getItemCount();
                     System.out.println("value of s" + s );

               String[] selectList = new String[s];
           	selectList = loginlist.getItems();

             if (s > 0)
			{
				String createMess = "SendMessage:" + jTextField1.getText() +":"+currLogin;
				for (int i=0 ; i<s;i++)
				{
                	createMess += ":" ;
					createMess += selectList[i];
				}
				try
                {
                    out.println(createMess);
                    out.flush();
                }catch(Exception eee){System.out.println(eee);}
                System.out.println(createMess);
                jTextField1.setText("");

    }//GEN-LAST:event_jButton2ActionPerformed
        }
        private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
            try{
			    	String logMsg = "Logout:" + currLogin;
                	try
		            {
					 		out.println(logMsg);
		                    			out.flush();
							out.close();
           			}
					catch(Exception eee)
					{
						System.out.println(eee);
					}

				servSocket.close();
				System.exit(0);
			     }	
			catch(Exception eio)	
			{	
				System.out.println(eio);
			}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
      //  clientattach attach=new clientattach();
       // attach.setVisible(true);
         javax.swing.JFileChooser jFileChooser1 ;
      //     File f=jFileChooser1.getSelectedFile();
        // String f2=f.getPath();
         //String file=jFileChooser1.getName(f);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
      try{
          File f1=new File("E:/abc.txt");
          //long len=f1.length();
          byte b1[]=new byte[(int) f1.length()];
            FileInputStream fis=new FileInputStream(f1);
              DataInputStream dis=new DataInputStream(fis);
            dis.read(b1);
            String File=new String(b1);
        //    String leng=String.valueOf(len);
              String[] selectList = new String[10];
           	selectList = loginlist.getSelectedItems();
           	if (selectList.length == 0)
           	{
           	  JOptionPane.showMessageDialog(null,"Please select any user from the List","Select User From List",0);

           	}
           	else
           	{
	        System.out.println(selectList);
			}
            //chatTextArea.append(currLogin+" : "+chatMessage.getText()+"\n");
			if (selectList.length > 0)
			{
				String createMess = "Filesend:" + File +":"+currLogin;
				for (int i=0 ; i<selectList.length;i++)
				{
                	createMess += ":" ;
					createMess += selectList[i];
				}
				try
                {
                    out.println(createMess);
                    out.flush();
                }catch(Exception eee){System.out.println(eee);}
                System.out.println(createMess);
      
      
      
      
      
      
      }
      }catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jButton5ActionPerformed


    /**
     * @param args the command line arguments
     */
   //public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
     /* //  //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(clientchat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(clientchat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(clientchat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(clientchat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
    //java.awt.EventQueue.invokeLater(new Runnable() {

      //      @Override
        //    public void run() {
          //      new clientchat().setVisible(true);
         //   }
       // });
    //}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private java.awt.List loginlist;
    // End of variables declaration//GEN-END:variables

class ListMesgUpdate extends Thread
	{
        @Override
		public void run()
		{
		     String loginName;
 		     while (true)
		     {
				try
				{
		             serverMess = in.readLine();
				}
				catch (Exception Excep){ System.out.println(Excep);}
				readTokenizer = new StringTokenizer(serverMess,":");
				for(int j=0;j<loginlist.getItemCount();j++)
				{
					String name=loginlist.getItem(j);
					if(name.equals(currLogin))
					{
						loginlist.select(j);
					}
				}
				// Storing the information from the client
				cmdStr = readTokenizer.nextToken();
				// Incase of new client logged in
				if (cmdStr.equals("NewLogin"))
				{
					loginlist.removeAll();
					// Add the login names to the Tokenizer
					while (readTokenizer.hasMoreTokens())
					{
						loginName = readTokenizer.nextToken();
						loginlist.add(loginName);
					}
				}

				if (cmdStr.equals("NewLoginMess"))
				{
					while (readTokenizer.hasMoreTokens())
					{
						loginName = readTokenizer.nextToken();
						jTextArea1.append(loginName + " has logged in\n" );
					}
				}

				if (cmdStr.equals("DelLogin"))
				{
					loginlist.removeAll();

					while (readTokenizer.hasMoreTokens())
					{
						loginName = readTokenizer.nextToken();
						loginlist.add(loginName);
					}
				}

				if (cmdStr.equals("DelLoginMess"))
				{
					while (readTokenizer.hasMoreTokens())
					{
						loginName = readTokenizer.nextToken();
                        jTextArea1.append("Good Bye "+loginName+" \n" +loginName+" has logged out \n");
					}
				}

				if (cmdStr.equals("ChatMess"))
				{
					String chatMessage = readTokenizer.nextToken();
					String sender = readTokenizer.nextToken();
		            jTextArea1.append(sender +" :"+chatMessage+ "\n");
				}
                                if (cmdStr.equals("Filesend"))
				{
					try{String File = readTokenizer.nextToken();
                                        //String leng = readTokenizer.nextToken();
                                        //int m=Integer.parseInt(leng);
                                        byte b1[]=File.getBytes();
                                        File f2=new File("E:/hello.txt");
                                        FileOutputStream fos=new FileOutputStream(f2);
                                        DataOutputStream dos=new DataOutputStream(fos);
                                        dos.write(b1);
					String sender = readTokenizer.nextToken();
		            jTextArea1.append(sender +" :"+File+ "\n");
				}catch(Exception e){}}

                //c1.show(mainPanel,"card2");
				 }
			}
		}

 
}

